#!/bin/bash
#
# Title:      PSAutomate
# Based On:   PGBlitz (Reference Title File)
# Original Author(s):  Admin9705 
# PSAutomate Auther: fattylewis
# URL:        https://psautomate.io - http://github.psautomate.io
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        psarole: 'emby'
        intport: '8096'
        extport: '8096'
        image: 'emby/embyserver'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/coreapps/apps/_core.yml'

    - name: 'XML Check'
      stat:
        path: /opt/appdata/{{psarole}}/config/system.xml
      register: xmlcheck

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        psa_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{psarole}}.{{domain.stdout}}{{tldset}}{{cname}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Setting PSA Volumes'
      set_fact:
        psa_volumes:
          - '/etc/localtime:/etc/localtime:ro'
          - '{{path.stdout}}:{{path.stdout}}'
          - '/mnt:/mnt'
          - '/opt/appdata/{{psarole}}:/config'
          - '/opt/transcodes:/transcode'

    - name: 'Setting PSA ENV'
      set_fact:
        psa_env:
          UID: '1000'
          GID: '1000'
          GIDLIST: '1000'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Check'
      stat:
        path: '/dev/dri'
      register: dev_dri

    - name: 'Deploying {{psarole}}'
      docker_container:
        name: '{{psarole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        devices: "{{ '/dev/dri:/dev/dri' if dev_dri.stat.exists == True | default(false) else omit }}"
        volumes: '{{psa_volumes}}'
        env: '{{psa_env}}'
        restart_policy: unless-stopped
        networks:
          - name: psautomate
            aliases:
              - '{{psarole}}'
        expose: '8096'
        state: started
        labels: '{{psa_labels}}'

    # FIRST TIME CONFIGURATION ###########################################################
    - name: 'Configuring {{psarole}} for first time use'
      block:
        - name: 'Pending XML Generation'
          wait_for:
            path: '/opt/appdata/{{psarole}}/config/system.xml'
            state: present

        - name: 'Wait 5 Seconds'
          wait_for:
            timeout: 5

        - name: 'Stop {{psarole}}'
          docker_container:
            name: '{{psarole}}'
            state: stopped

        - name: 'Turn Off Reporting'
          xml:
            path: '/opt/appdata/{{psarole}}/config/system.xml'
            xpath: /ServerConfiguration/EnableAnonymousUsageReporting
            value: 'false'

        - name: 'Restart {{psarole}}'
          docker_container:
            name: '{{psarole}}'
            state: started
      when: not xmlcheck.stat.exists
